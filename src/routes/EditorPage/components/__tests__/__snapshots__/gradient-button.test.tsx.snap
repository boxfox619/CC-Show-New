// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GradientButtonItem /> should render one <div> & div label 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GradientButtonItem
    label="라벨"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        style={
          Object {
            "padding": "7px 8px",
          }
        }
      >
        라벨
      </div>,
      "label": "라벨",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "라벨",
        "style": Object {
          "padding": "7px 8px",
        },
      },
      "ref": null,
      "rendered": "라벨",
      "type": "div",
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
    display: table;
    font-size: 0.7em;
    font-weight: bold;
    color : #5D87B5;
    cursor: pointer;
    border-radius: 4px;
    user-select: none;
    &:hover {
        background: url('",
          "');
        background-repeat: no-repeat;
        color: white;
    }
    &:hover:after {
        content: \\"\\";
        display: table-cell;
        vertical-align: middle;
        background: url('",
          "') no-repeat left center;
        width: 23px;
    }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          style={
            Object {
              "padding": "7px 8px",
            }
          }
        >
          라벨
        </div>,
        "label": "라벨",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "라벨",
          "style": Object {
            "padding": "7px 8px",
          },
        },
        "ref": null,
        "rendered": "라벨",
        "type": "div",
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
    display: table;
    font-size: 0.7em;
    font-weight: bold;
    color : #5D87B5;
    cursor: pointer;
    border-radius: 4px;
    user-select: none;
    &:hover {
        background: url('",
            "');
        background-repeat: no-repeat;
        color: white;
    }
    &:hover:after {
        content: \\"\\";
        display: table-cell;
        vertical-align: middle;
        background: url('",
            "') no-repeat left center;
        width: 23px;
    }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
