// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AssetView /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    controllable={true}
    data={
      TextAsset {
        "attribute": Object {},
        "height": 100,
        "id": 1,
        "position": Object {
          "x": 1,
          "y": 1,
        },
        "style": Object {
          "borderStyle": "solid",
          "borderWidth": 0,
        },
        "type": 0,
        "value": "value",
        "width": 100,
      }
    }
    index={1}
    isDoubleClicked={false}
    isHovered={false}
    isSelected={false}
    onMouseHover={[MockFunction]}
    onValueChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        false,
        <Unknown
          controllable={true}
          data={
            TextAsset {
              "attribute": Object {},
              "height": 100,
              "id": 1,
              "position": Object {
                "x": 1,
                "y": 1,
              },
              "style": Object {
                "borderStyle": "solid",
                "borderWidth": 0,
              },
              "type": 0,
              "value": "value",
              "width": 100,
            }
          }
          index={1}
          isDoubleClicked={false}
          isSelected={false}
          onValueChange={[MockFunction]}
        />,
        false,
      ],
      "data-id": 1,
      "data-type": "asset",
      "onMouseOut": [Function],
      "onMouseOver": [Function],
      "style": Object {
        "height": "100px",
        "left": "1px",
        "top": "1px",
        "width": "100px",
      },
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "controllable": true,
          "data": TextAsset {
            "attribute": Object {},
            "height": 100,
            "id": 1,
            "position": Object {
              "x": 1,
              "y": 1,
            },
            "style": Object {
              "borderStyle": "solid",
              "borderWidth": 0,
            },
            "type": 0,
            "value": "value",
            "width": 100,
          },
          "index": 1,
          "isDoubleClicked": false,
          "isSelected": false,
          "onValueChange": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bZQynM",
        "isStatic": true,
        "rules": Array [
          "
    position: absolute !important;
    overflow: hidden;
    display: inline-block;
    border: 0;
    margin: 3px;
    padding: 6px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bZQynM",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          false,
          <Unknown
            controllable={true}
            data={
              TextAsset {
                "attribute": Object {},
                "height": 100,
                "id": 1,
                "position": Object {
                  "x": 1,
                  "y": 1,
                },
                "style": Object {
                  "borderStyle": "solid",
                  "borderWidth": 0,
                },
                "type": 0,
                "value": "value",
                "width": 100,
              }
            }
            index={1}
            isDoubleClicked={false}
            isSelected={false}
            onValueChange={[MockFunction]}
          />,
          false,
        ],
        "data-id": 1,
        "data-type": "asset",
        "onMouseOut": [Function],
        "onMouseOver": [Function],
        "style": Object {
          "height": "100px",
          "left": "1px",
          "top": "1px",
          "width": "100px",
        },
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "controllable": true,
            "data": TextAsset {
              "attribute": Object {},
              "height": 100,
              "id": 1,
              "position": Object {
                "x": 1,
                "y": 1,
              },
              "style": Object {
                "borderStyle": "solid",
                "borderWidth": 0,
              },
              "type": 0,
              "value": "value",
              "width": 100,
            },
            "index": 1,
            "isDoubleClicked": false,
            "isSelected": false,
            "onValueChange": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "rules": Array [
            "
    position: absolute !important;
    overflow: hidden;
    display: inline-block;
    border: 0;
    margin: 3px;
    padding: 6px;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
